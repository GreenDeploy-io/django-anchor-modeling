# Generated by Django 4.2.6 on 2023-10-30 17:59

import django.db.models.deletion
import django.db.models.manager
from django.db import migrations, models

import django_anchor_modeling.models


class Migration(migrations.Migration):
    dependencies = [
        ("django_anchor_modeling", "0001_initial"),
        ("orders", "0011_withfkthatsetrelatedname_and_more"),
    ]

    operations = [
        migrations.AlterModelManagers(
            name="tproduct",
            managers=[
                ("filters", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ProductHasSeller",
            fields=[
                (
                    "anchor",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        related_name="product",
                        serialize=False,
                        to="orders.tproduct",
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        default=django_anchor_modeling.models.Transaction.get_sentinel,
                        on_delete=models.SET(
                            django_anchor_modeling.models.Transaction.get_sentinel
                        ),
                        to="django_anchor_modeling.transaction",
                    ),
                ),
                (
                    "value",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="some_value",
                        to="orders.withfkthatsetrelatedname",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HistorizedProductHasSeller",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "off_txn",
                    models.ForeignKey(
                        db_constraint=False,
                        default=django_anchor_modeling.models.Transaction.get_sentinel,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="deactivated_%(app_label)s_%(class)ss",
                        related_query_name="that_deactivated_%(app_label)s_%(class)ss",
                        to="django_anchor_modeling.transaction",
                    ),
                ),
                (
                    "on_txn",
                    models.ForeignKey(
                        db_constraint=False,
                        default=django_anchor_modeling.models.Transaction.get_sentinel,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="created_%(app_label)s_%(class)ss",
                        related_query_name="that_created_%(app_label)s_%(class)ss",
                        to="django_anchor_modeling.transaction",
                    ),
                ),
                (
                    "original",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="versions",
                        to="orders.producthasseller",
                    ),
                ),
                (
                    "value",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="historized_some_value",
                        to="orders.withfkthatsetrelatedname",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
